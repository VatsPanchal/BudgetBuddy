{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"EditBudget\",\n  data() {\n    return {\n      income: 0,\n      savingsPercentage: 0,\n      categories: [],\n      currentSpending: {},\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    hasErrors() {\n      return this.categories.some(category => this.hasCategoryError(category.name));\n    }\n  },\n  async created() {\n    await this.fetchCurrentBudget();\n    await this.fetchCurrentSpending();\n  },\n  methods: {\n    async fetchCurrentBudget() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          this.$router.push(\"/login\");\n          return;\n        }\n        const response = await axios.get(\"/api/budget/summary\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.income = response.data.income;\n        this.savingsPercentage = response.data.savings_goal / response.data.income * 100;\n\n        // Convert categories object to array format\n        this.categories = Object.entries(response.data.categories).map(([name, amount]) => ({\n          name,\n          amount\n        }));\n      } catch (error) {\n        console.error(\"Error fetching budget:\", error);\n        if (error.response?.status === 401) {\n          this.$router.push(\"/login\");\n        }\n      }\n    },\n    async fetchCurrentSpending() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          this.$router.push(\"/login\");\n          return;\n        }\n        const response = await axios.get(\"/api/budget/expenses\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Calculate total spending per category\n        this.currentSpending = response.data.reduce((acc, expense) => {\n          acc[expense.category] = (acc[expense.category] || 0) + expense.amount_spent;\n          return acc;\n        }, {});\n      } catch (error) {\n        console.error(\"Error fetching expenses:\", error);\n      }\n    },\n    addCategory() {\n      this.categories.push({\n        name: \"\",\n        amount: 0\n      });\n    },\n    hasCategoryError(categoryName) {\n      const currentSpending = this.getCategorySpending(categoryName);\n      const category = this.categories.find(c => c.name === categoryName);\n      return category && category.amount < currentSpending;\n    },\n    getCategorySpending(categoryName) {\n      return this.currentSpending[categoryName] || 0;\n    },\n    async updateBudget() {\n      if (this.hasErrors) {\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          this.$router.push(\"/login\");\n          return;\n        }\n        const savingsAmount = this.income * this.savingsPercentage / 100;\n        const categories = this.categories.reduce((acc, category) => {\n          acc[category.name] = category.amount;\n          return acc;\n        }, {});\n        await axios.post(\"/api/budget/update\", {\n          income: this.income,\n          savings_goal: savingsAmount,\n          categories: categories\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.$router.push(\"/dashboard\");\n      } catch (error) {\n        console.error(\"Error updating budget:\", error);\n        this.error = error.response?.data?.detail || \"Failed to update budget\";\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","income","savingsPercentage","categories","currentSpending","loading","error","computed","hasErrors","some","category","hasCategoryError","created","fetchCurrentBudget","fetchCurrentSpending","methods","token","localStorage","getItem","$router","push","response","get","headers","Authorization","savings_goal","Object","entries","map","amount","console","status","reduce","acc","expense","amount_spent","addCategory","categoryName","getCategorySpending","find","c","updateBudget","savingsAmount","post","detail"],"sources":["C:\\Users\\nikha\\OneDrive\\Documents\\CS122 Final Project\\project\\budget-buddy\\frontend\\src\\components\\EditBudget.vue"],"sourcesContent":["<template>\r\n  <div class=\"edit-budget\">\r\n    <div class=\"header\">\r\n      <h1>Edit Budget Distribution</h1>\r\n      <router-link to=\"/dashboard\" class=\"back-button\"\r\n        >‚Üê Back to Dashboard</router-link\r\n      >\r\n    </div>\r\n\r\n    <div class=\"budget-form\">\r\n      <div class=\"form-group\">\r\n        <label for=\"income\">Monthly Income</label>\r\n        <div class=\"input-with-symbol\">\r\n          <span class=\"symbol\">$</span>\r\n          <input\r\n            type=\"number\"\r\n            id=\"income\"\r\n            v-model=\"income\"\r\n            required\r\n            min=\"0\"\r\n            step=\"0.01\"\r\n            placeholder=\"Enter monthly income\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"savings\">Savings Goal (%)</label>\r\n        <div class=\"input-with-symbol\">\r\n          <input\r\n            type=\"number\"\r\n            id=\"savings\"\r\n            v-model=\"savingsPercentage\"\r\n            required\r\n            min=\"0\"\r\n            max=\"100\"\r\n            step=\"1\"\r\n            placeholder=\"Enter savings percentage\"\r\n          />\r\n          <span class=\"symbol\">%</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"categories\">\r\n        <h3>Category Distribution</h3>\r\n        <div class=\"category-list\">\r\n          <div\r\n            v-for=\"(category, index) in categories\"\r\n            :key=\"index\"\r\n            class=\"category-item\"\r\n          >\r\n            <div class=\"category-header\">\r\n              <input\r\n                type=\"text\"\r\n                v-model=\"category.name\"\r\n                placeholder=\"Category name\"\r\n                required\r\n              />\r\n              <div class=\"input-with-symbol\">\r\n                <span class=\"symbol\">$</span>\r\n                <input\r\n                  type=\"number\"\r\n                  v-model=\"category.amount\"\r\n                  required\r\n                  min=\"0\"\r\n                  step=\"0.01\"\r\n                  placeholder=\"Amount\"\r\n                  :class=\"{ 'error-input': hasCategoryError(category.name) }\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div v-if=\"hasCategoryError(category.name)\" class=\"error-message\">\r\n              Cannot reduce budget below current spending of ${{\r\n                getCategorySpending(category.name).toFixed(2)\r\n              }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button class=\"add-category\" @click=\"addCategory\">\r\n          + Add Category\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"form-actions\">\r\n        <button\r\n          class=\"btn-primary\"\r\n          @click=\"updateBudget\"\r\n          :disabled=\"loading || hasErrors\"\r\n        >\r\n          {{ loading ? \"Updating...\" : \"Update Budget\" }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"EditBudget\",\r\n  data() {\r\n    return {\r\n      income: 0,\r\n      savingsPercentage: 0,\r\n      categories: [],\r\n      currentSpending: {},\r\n      loading: false,\r\n      error: null,\r\n    };\r\n  },\r\n  computed: {\r\n    hasErrors() {\r\n      return this.categories.some((category) =>\r\n        this.hasCategoryError(category.name)\r\n      );\r\n    },\r\n  },\r\n  async created() {\r\n    await this.fetchCurrentBudget();\r\n    await this.fetchCurrentSpending();\r\n  },\r\n  methods: {\r\n    async fetchCurrentBudget() {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n          this.$router.push(\"/login\");\r\n          return;\r\n        }\r\n\r\n        const response = await axios.get(\"/api/budget/summary\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        this.income = response.data.income;\r\n        this.savingsPercentage =\r\n          (response.data.savings_goal / response.data.income) * 100;\r\n\r\n        // Convert categories object to array format\r\n        this.categories = Object.entries(response.data.categories).map(\r\n          ([name, amount]) => ({\r\n            name,\r\n            amount,\r\n          })\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Error fetching budget:\", error);\r\n        if (error.response?.status === 401) {\r\n          this.$router.push(\"/login\");\r\n        }\r\n      }\r\n    },\r\n    async fetchCurrentSpending() {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n          this.$router.push(\"/login\");\r\n          return;\r\n        }\r\n\r\n        const response = await axios.get(\"/api/budget/expenses\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        // Calculate total spending per category\r\n        this.currentSpending = response.data.reduce((acc, expense) => {\r\n          acc[expense.category] =\r\n            (acc[expense.category] || 0) + expense.amount_spent;\r\n          return acc;\r\n        }, {});\r\n      } catch (error) {\r\n        console.error(\"Error fetching expenses:\", error);\r\n      }\r\n    },\r\n    addCategory() {\r\n      this.categories.push({ name: \"\", amount: 0 });\r\n    },\r\n    hasCategoryError(categoryName) {\r\n      const currentSpending = this.getCategorySpending(categoryName);\r\n      const category = this.categories.find((c) => c.name === categoryName);\r\n      return category && category.amount < currentSpending;\r\n    },\r\n    getCategorySpending(categoryName) {\r\n      return this.currentSpending[categoryName] || 0;\r\n    },\r\n    async updateBudget() {\r\n      if (this.hasErrors) {\r\n        return;\r\n      }\r\n\r\n      this.loading = true;\r\n      this.error = null;\r\n\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n          this.$router.push(\"/login\");\r\n          return;\r\n        }\r\n\r\n        const savingsAmount = (this.income * this.savingsPercentage) / 100;\r\n        const categories = this.categories.reduce((acc, category) => {\r\n          acc[category.name] = category.amount;\r\n          return acc;\r\n        }, {});\r\n\r\n        await axios.post(\r\n          \"/api/budget/update\",\r\n          {\r\n            income: this.income,\r\n            savings_goal: savingsAmount,\r\n            categories: categories,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        this.$router.push(\"/dashboard\");\r\n      } catch (error) {\r\n        console.error(\"Error updating budget:\", error);\r\n        this.error = error.response?.data?.detail || \"Failed to update budget\";\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.edit-budget {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n  background-color: var(--bg-primary);\r\n  color: var(--text-primary);\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.back-button {\r\n  color: var(--progress-fill);\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.budget-form {\r\n  background: var(--card-bg);\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px var(--shadow-color);\r\n  padding: 2rem;\r\n  border: 1px solid var(--border-color);\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n  color: var(--text-secondary);\r\n}\r\n\r\n.input-with-symbol {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.symbol {\r\n  position: absolute;\r\n  left: 0.75rem;\r\n  color: var(--text-secondary);\r\n  opacity: 0.7;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  padding-left: 2rem;\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  background-color: var(--bg-primary);\r\n  color: var(--text-primary);\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n  border-color: var(--progress-fill);\r\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\r\n}\r\n\r\n.error-input {\r\n  border-color: var(--error-text);\r\n}\r\n\r\n.error-message {\r\n  color: var(--error-text);\r\n  font-size: 0.875rem;\r\n  margin-top: 0.25rem;\r\n}\r\n\r\n.categories {\r\n  margin-top: 2rem;\r\n}\r\n\r\n.category-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.category-item {\r\n  background: var(--bg-secondary);\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  border: 1px solid var(--border-color);\r\n}\r\n\r\n.category-header {\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.category-header input {\r\n  flex: 1;\r\n}\r\n\r\n.add-category {\r\n  background: none;\r\n  border: 2px dashed var(--progress-fill);\r\n  color: var(--progress-fill);\r\n  padding: 0.75rem;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  width: 100%;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.add-category:hover {\r\n  background: var(--bg-secondary);\r\n}\r\n\r\n.form-actions {\r\n  margin-top: 2rem;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: var(--progress-fill);\r\n  color: white;\r\n  padding: 0.75rem 1.5rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #43a047;\r\n}\r\n\r\n.btn-primary:disabled {\r\n  opacity: 0.7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .edit-budget {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .header {\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    text-align: center;\r\n  }\r\n\r\n  .category-header {\r\n    flex-direction: column;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}