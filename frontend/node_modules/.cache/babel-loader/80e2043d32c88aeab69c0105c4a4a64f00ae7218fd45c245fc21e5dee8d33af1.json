{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport LoginPage from \"../components/LoginPage.vue\";\nimport CreateAccount from \"../components/CreateAccount.vue\";\nimport ForgotPassword from \"../components/ForgotPassword.vue\";\nimport SetupPage from \"../components/SetupPage.vue\";\nimport MainPage from \"../components/MainPage.vue\";\nimport Profile from \"../components/Profile.vue\";\nimport ResetPassword from \"../components/ResetPassword.vue\";\nimport EditBudget from \"../components/EditBudget.vue\";\nconst routes = [{\n  path: \"/\",\n  redirect: \"/login\"\n}, {\n  path: \"/login\",\n  name: \"Login\",\n  component: LoginPage\n}, {\n  path: \"/create-account\",\n  name: \"CreateAccount\",\n  component: CreateAccount\n}, {\n  path: \"/forgot-password\",\n  name: \"ForgotPassword\",\n  component: ForgotPassword\n}, {\n  path: \"/reset-password\",\n  name: \"ResetPassword\",\n  component: ResetPassword\n}, {\n  path: \"/setup\",\n  name: \"Setup\",\n  component: SetupPage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/dashboard\",\n  name: \"Dashboard\",\n  component: MainPage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/profile\",\n  name: \"Profile\",\n  component: Profile,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/edit-budget\",\n  name: \"EditBudget\",\n  component: EditBudget,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Navigation guard to check authentication\nrouter.beforeEach((to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const isAuthenticated = localStorage.getItem(\"token\");\n  if (requiresAuth && !isAuthenticated) {\n    next(\"/login\");\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","LoginPage","CreateAccount","ForgotPassword","SetupPage","MainPage","Profile","ResetPassword","EditBudget","routes","path","redirect","name","component","meta","requiresAuth","router","history","beforeEach","to","from","next","matched","some","record","isAuthenticated","localStorage","getItem"],"sources":["C:/Users/nikha/OneDrive/Documents/CS122 Final Project/BudgetBuddy/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from \"vue-router\";\r\nimport LoginPage from \"../components/LoginPage.vue\";\r\nimport CreateAccount from \"../components/CreateAccount.vue\";\r\nimport ForgotPassword from \"../components/ForgotPassword.vue\";\r\nimport SetupPage from \"../components/SetupPage.vue\";\r\nimport MainPage from \"../components/MainPage.vue\";\r\nimport Profile from \"../components/Profile.vue\";\r\nimport ResetPassword from \"../components/ResetPassword.vue\";\r\nimport EditBudget from \"../components/EditBudget.vue\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    redirect: \"/login\",\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\",\r\n    component: LoginPage,\r\n  },\r\n  {\r\n    path: \"/create-account\",\r\n    name: \"CreateAccount\",\r\n    component: CreateAccount,\r\n  },\r\n  {\r\n    path: \"/forgot-password\",\r\n    name: \"ForgotPassword\",\r\n    component: ForgotPassword,\r\n  },\r\n  {\r\n    path: \"/reset-password\",\r\n    name: \"ResetPassword\",\r\n    component: ResetPassword,\r\n  },\r\n  {\r\n    path: \"/setup\",\r\n    name: \"Setup\",\r\n    component: SetupPage,\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    component: MainPage,\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: \"/profile\",\r\n    name: \"Profile\",\r\n    component: Profile,\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: \"/edit-budget\",\r\n    name: \"EditBudget\",\r\n    component: EditBudget,\r\n    meta: { requiresAuth: true },\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n});\r\n\r\n// Navigation guard to check authentication\r\nrouter.beforeEach((to, from, next) => {\r\n  const requiresAuth = to.matched.some((record) => record.meta.requiresAuth);\r\n  const isAuthenticated = localStorage.getItem(\"token\");\r\n\r\n  if (requiresAuth && !isAuthenticated) {\r\n    next(\"/login\");\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,UAAU,MAAM,8BAA8B;AAErD,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,IAAI,EAAE,QAAQ;EACdE,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEZ;AACb,CAAC,EACD;EACES,IAAI,EAAE,iBAAiB;EACvBE,IAAI,EAAE,eAAe;EACrBC,SAAS,EAAEX;AACb,CAAC,EACD;EACEQ,IAAI,EAAE,kBAAkB;EACxBE,IAAI,EAAE,gBAAgB;EACtBC,SAAS,EAAEV;AACb,CAAC,EACD;EACEO,IAAI,EAAE,iBAAiB;EACvBE,IAAI,EAAE,eAAe;EACrBC,SAAS,EAAEN;AACb,CAAC,EACD;EACEG,IAAI,EAAE,QAAQ;EACdE,IAAI,EAAE,OAAO;EACbC,SAAS,EAAET,SAAS;EACpBU,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEL,IAAI,EAAE,YAAY;EAClBE,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAER,QAAQ;EACnBS,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEL,IAAI,EAAE,UAAU;EAChBE,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEP,OAAO;EAClBQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEL,IAAI,EAAE,cAAc;EACpBE,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEL,UAAU;EACrBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,CACF;AAED,MAAMC,MAAM,GAAGjB,YAAY,CAAC;EAC1BkB,OAAO,EAAEjB,gBAAgB,CAAC,CAAC;EAC3BS;AACF,CAAC,CAAC;;AAEF;AACAO,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMN,YAAY,GAAGI,EAAE,CAACG,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACV,IAAI,CAACC,YAAY,CAAC;EAC1E,MAAMU,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAErD,IAAIZ,YAAY,IAAI,CAACU,eAAe,EAAE;IACpCJ,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}