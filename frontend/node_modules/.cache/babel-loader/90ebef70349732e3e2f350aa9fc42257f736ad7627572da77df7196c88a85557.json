{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"ForgotPassword\",\n  data() {\n    return {\n      email: \"\",\n      loading: false,\n      error: null,\n      emailError: null,\n      resetSent: false\n    };\n  },\n  methods: {\n    validateEmail() {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!this.email) {\n        this.emailError = \"Email is required\";\n        return false;\n      }\n      if (!emailRegex.test(this.email)) {\n        this.emailError = \"Please enter a valid email address\";\n        return false;\n      }\n      this.emailError = null;\n      return true;\n    },\n    async handleSubmit() {\n      if (!this.validateEmail()) {\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      try {\n        console.log(\"Sending request with email:\", this.email);\n        const response = await axios.post(\"/api/auth/forgot-password\", {\n          email: this.email\n        });\n        console.log(\"Response received:\", response.data);\n        if (response.data.message) {\n          this.resetSent = true;\n          // Redirect to reset password page with email as query parameter\n          this.$router.push({\n            path: \"/reset-password\",\n            query: {\n              email: this.email\n            }\n          });\n        }\n      } catch (error) {\n        console.error(\"Error details:\", error.response?.data);\n        if (error.response?.status === 404) {\n          this.error = \"No account found with this email address\";\n        } else if (error.response?.status === 422) {\n          // Handle validation errors from the backend\n          const details = error.response.data.detail;\n          if (Array.isArray(details)) {\n            this.error = details[0].msg;\n          } else {\n            this.error = \"Invalid email format\";\n          }\n        } else {\n          this.error = \"An error occurred. Please try again.\";\n        }\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","email","loading","error","emailError","resetSent","methods","validateEmail","emailRegex","test","handleSubmit","console","log","response","post","message","$router","push","path","query","status","details","detail","Array","isArray","msg"],"sources":["C:\\Users\\nikha\\OneDrive\\Documents\\CS122 Final Project\\project\\budget-buddy\\frontend\\src\\components\\ForgotPassword.vue"],"sourcesContent":["<template>\r\n  <div class=\"forgot-password-container\">\r\n    <div class=\"forgot-password-card\">\r\n      <h2>Reset Your Password</h2>\r\n      <p class=\"subtitle\">Enter your email to receive a password reset link</p>\r\n\r\n      <form\r\n        @submit.prevent=\"handleSubmit\"\r\n        class=\"forgot-password-form\"\r\n        v-if=\"!resetSent\"\r\n      >\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            v-model=\"email\"\r\n            required\r\n            placeholder=\"Enter your email\"\r\n            @input=\"validateEmail\"\r\n          />\r\n          <span class=\"error\" v-if=\"emailError\">{{ emailError }}</span>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn-primary\"\r\n          :disabled=\"loading || emailError\"\r\n        >\r\n          {{ loading ? \"Sending...\" : \"Send Reset Link\" }}\r\n        </button>\r\n\r\n        <div class=\"error-message\" v-if=\"error\">\r\n          {{ error }}\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"success-message\" v-else>\r\n        <p>A password reset link has been sent to your email.</p>\r\n        <p>\r\n          Please check your inbox and follow the instructions to reset your\r\n          password.\r\n        </p>\r\n        <router-link to=\"/login\" class=\"btn-secondary\">\r\n          Return to Login\r\n        </router-link>\r\n      </div>\r\n\r\n      <div class=\"back-to-login\">\r\n        <router-link to=\"/login\" class=\"btn-link\">\r\n          ‚Üê Back to Login\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"ForgotPassword\",\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      loading: false,\r\n      error: null,\r\n      emailError: null,\r\n      resetSent: false,\r\n    };\r\n  },\r\n  methods: {\r\n    validateEmail() {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!this.email) {\r\n        this.emailError = \"Email is required\";\r\n        return false;\r\n      }\r\n      if (!emailRegex.test(this.email)) {\r\n        this.emailError = \"Please enter a valid email address\";\r\n        return false;\r\n      }\r\n      this.emailError = null;\r\n      return true;\r\n    },\r\n    async handleSubmit() {\r\n      if (!this.validateEmail()) {\r\n        return;\r\n      }\r\n\r\n      this.loading = true;\r\n      this.error = null;\r\n\r\n      try {\r\n        console.log(\"Sending request with email:\", this.email);\r\n        const response = await axios.post(\"/api/auth/forgot-password\", {\r\n          email: this.email,\r\n        });\r\n        console.log(\"Response received:\", response.data);\r\n\r\n        if (response.data.message) {\r\n          this.resetSent = true;\r\n          // Redirect to reset password page with email as query parameter\r\n          this.$router.push({\r\n            path: \"/reset-password\",\r\n            query: { email: this.email },\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error details:\", error.response?.data);\r\n        if (error.response?.status === 404) {\r\n          this.error = \"No account found with this email address\";\r\n        } else if (error.response?.status === 422) {\r\n          // Handle validation errors from the backend\r\n          const details = error.response.data.detail;\r\n          if (Array.isArray(details)) {\r\n            this.error = details[0].msg;\r\n          } else {\r\n            this.error = \"Invalid email format\";\r\n          }\r\n        } else {\r\n          this.error = \"An error occurred. Please try again.\";\r\n        }\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.forgot-password-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  padding: 1rem;\r\n}\r\n\r\n.forgot-password-card {\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  padding: 2rem;\r\n  width: 100%;\r\n  max-width: 400px;\r\n}\r\n\r\nh2 {\r\n  color: #4caf50;\r\n  margin-bottom: 0.5rem;\r\n  text-align: center;\r\n}\r\n\r\n.subtitle {\r\n  color: #6c757d;\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.forgot-password-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\nlabel {\r\n  font-weight: 500;\r\n  color: #6c757d;\r\n}\r\n\r\ninput {\r\n  padding: 0.75rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n  border-color: #4caf50;\r\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #4caf50;\r\n  color: white;\r\n  padding: 0.75rem 1.5rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #43a047;\r\n}\r\n\r\n.btn-primary:disabled {\r\n  opacity: 0.7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.btn-secondary {\r\n  display: inline-block;\r\n  background-color: #f8f9fa;\r\n  color: #4caf50;\r\n  padding: 0.75rem 1.5rem;\r\n  border: 1px solid #4caf50;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.btn-secondary:hover {\r\n  background-color: #4caf50;\r\n  color: white;\r\n}\r\n\r\n.btn-link {\r\n  color: #4caf50;\r\n  text-decoration: none;\r\n  font-size: 0.9rem;\r\n  transition: color 0.2s;\r\n}\r\n\r\n.btn-link:hover {\r\n  color: #43a047;\r\n}\r\n\r\n.error-message {\r\n  color: #dc3545;\r\n  background-color: #f8d7da;\r\n  border: 1px solid #f5c6cb;\r\n  padding: 0.75rem;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n}\r\n\r\n.success-message {\r\n  text-align: center;\r\n  color: #28a745;\r\n  background-color: #d4edda;\r\n  border: 1px solid #c3e6cb;\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.back-to-login {\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.error {\r\n  color: #dc3545;\r\n  font-size: 0.875rem;\r\n  margin-top: 0.25rem;\r\n}\r\n</style>\r\n"],"mappings":"AA0DA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,IAAI;MACXC,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,MAAMC,UAAS,GAAI,4BAA4B;MAC/C,IAAI,CAAC,IAAI,CAACP,KAAK,EAAE;QACf,IAAI,CAACG,UAAS,GAAI,mBAAmB;QACrC,OAAO,KAAK;MACd;MACA,IAAI,CAACI,UAAU,CAACC,IAAI,CAAC,IAAI,CAACR,KAAK,CAAC,EAAE;QAChC,IAAI,CAACG,UAAS,GAAI,oCAAoC;QACtD,OAAO,KAAK;MACd;MACA,IAAI,CAACA,UAAS,GAAI,IAAI;MACtB,OAAO,IAAI;IACb,CAAC;IACD,MAAMM,YAAYA,CAAA,EAAG;MACnB,IAAI,CAAC,IAAI,CAACH,aAAa,CAAC,CAAC,EAAE;QACzB;MACF;MAEA,IAAI,CAACL,OAAM,GAAI,IAAI;MACnB,IAAI,CAACC,KAAI,GAAI,IAAI;MAEjB,IAAI;QACFQ,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAACX,KAAK,CAAC;QACtD,MAAMY,QAAO,GAAI,MAAMf,KAAK,CAACgB,IAAI,CAAC,2BAA2B,EAAE;UAC7Db,KAAK,EAAE,IAAI,CAACA;QACd,CAAC,CAAC;QACFU,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,QAAQ,CAACb,IAAI,CAAC;QAEhD,IAAIa,QAAQ,CAACb,IAAI,CAACe,OAAO,EAAE;UACzB,IAAI,CAACV,SAAQ,GAAI,IAAI;UACrB;UACA,IAAI,CAACW,OAAO,CAACC,IAAI,CAAC;YAChBC,IAAI,EAAE,iBAAiB;YACvBC,KAAK,EAAE;cAAElB,KAAK,EAAE,IAAI,CAACA;YAAM;UAC7B,CAAC,CAAC;QACJ;MACF,EAAE,OAAOE,KAAK,EAAE;QACdQ,OAAO,CAACR,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACU,QAAQ,EAAEb,IAAI,CAAC;QACrD,IAAIG,KAAK,CAACU,QAAQ,EAAEO,MAAK,KAAM,GAAG,EAAE;UAClC,IAAI,CAACjB,KAAI,GAAI,0CAA0C;QACzD,OAAO,IAAIA,KAAK,CAACU,QAAQ,EAAEO,MAAK,KAAM,GAAG,EAAE;UACzC;UACA,MAAMC,OAAM,GAAIlB,KAAK,CAACU,QAAQ,CAACb,IAAI,CAACsB,MAAM;UAC1C,IAAIC,KAAK,CAACC,OAAO,CAACH,OAAO,CAAC,EAAE;YAC1B,IAAI,CAAClB,KAAI,GAAIkB,OAAO,CAAC,CAAC,CAAC,CAACI,GAAG;UAC7B,OAAO;YACL,IAAI,CAACtB,KAAI,GAAI,sBAAsB;UACrC;QACF,OAAO;UACL,IAAI,CAACA,KAAI,GAAI,sCAAsC;QACrD;MACF,UAAU;QACR,IAAI,CAACD,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}