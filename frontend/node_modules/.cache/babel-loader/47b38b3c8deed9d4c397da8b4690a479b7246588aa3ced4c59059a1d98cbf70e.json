{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"CreateAccount\",\n  data() {\n    return {\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      loading: false,\n      error: null,\n      usernameError: null,\n      emailError: null,\n      passwordError: null,\n      confirmPasswordError: null\n    };\n  },\n  methods: {\n    validateForm() {\n      let isValid = true;\n\n      // Reset errors\n      this.usernameError = null;\n      this.emailError = null;\n      this.passwordError = null;\n      this.confirmPasswordError = null;\n\n      // Username validation\n      if (this.username.length < 3) {\n        this.usernameError = \"Username must be at least 3 characters long\";\n        isValid = false;\n      }\n\n      // Email validation\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(this.email)) {\n        this.emailError = \"Please enter a valid email address\";\n        isValid = false;\n      }\n\n      // Password validation\n      if (this.password.length < 8) {\n        this.passwordError = \"Password must be at least 8 characters long\";\n        isValid = false;\n      }\n\n      // Confirm password validation\n      if (this.password !== this.confirmPassword) {\n        this.confirmPasswordError = \"Passwords do not match\";\n        isValid = false;\n      }\n      return isValid;\n    },\n    async handleSubmit() {\n      if (this.password !== this.confirmPassword) {\n        this.error = \"Passwords do not match\";\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      try {\n        const response = await axios.post(\"/api/auth/register\", {\n          first_name: this.firstName,\n          last_name: this.lastName,\n          username: this.username,\n          email: this.email,\n          password: this.password\n        });\n        if (response.data.message === \"User created successfully\") {\n          // Store the token if provided\n          if (response.data.token) {\n            localStorage.setItem(\"token\", response.data.token);\n          }\n          // Redirect to setup page\n          this.$router.push(\"/setup\");\n        }\n      } catch (error) {\n        if (error.response) {\n          switch (error.response.status) {\n            case 400:\n              this.error = error.response.data.detail || \"Registration failed\";\n              break;\n            case 422:\n              this.error = \"Please check your input and try again\";\n              break;\n            default:\n              this.error = \"An error occurred. Please try again.\";\n          }\n        } else {\n          this.error = \"Network error. Please try again.\";\n        }\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","firstName","lastName","username","email","password","confirmPassword","loading","error","usernameError","emailError","passwordError","confirmPasswordError","methods","validateForm","isValid","length","emailRegex","test","handleSubmit","response","post","first_name","last_name","message","token","localStorage","setItem","$router","push","status","detail"],"sources":["C:\\Users\\nikha\\OneDrive\\Documents\\CS122 Final Project\\project\\budget-buddy\\frontend\\src\\components\\CreateAccount.vue"],"sourcesContent":["<template>\r\n  <div class=\"create-account-container\">\r\n    <div class=\"create-account-card\">\r\n      <h2>Create Your Account</h2>\r\n      <p class=\"subtitle\">Start your journey to financial freedom</p>\r\n\r\n      <form @submit.prevent=\"handleSubmit\" class=\"create-account-form\">\r\n        <div class=\"form-group\">\r\n          <label for=\"firstName\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"firstName\"\r\n            v-model=\"firstName\"\r\n            required\r\n            placeholder=\"Enter your first name\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"lastName\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"lastName\"\r\n            v-model=\"lastName\"\r\n            required\r\n            placeholder=\"Enter your last name\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            v-model=\"username\"\r\n            required\r\n            placeholder=\"Choose a username\"\r\n          />\r\n          <span class=\"error\" v-if=\"usernameError\">{{ usernameError }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            v-model=\"email\"\r\n            required\r\n            placeholder=\"Enter your email\"\r\n          />\r\n          <span class=\"error\" v-if=\"emailError\">{{ emailError }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            v-model=\"password\"\r\n            required\r\n            placeholder=\"Create a password\"\r\n          />\r\n          <span class=\"error\" v-if=\"passwordError\">{{ passwordError }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"confirmPassword\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            v-model=\"confirmPassword\"\r\n            required\r\n            placeholder=\"Confirm your password\"\r\n          />\r\n          <span class=\"error\" v-if=\"confirmPasswordError\">{{\r\n            confirmPasswordError\r\n          }}</span>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn-primary\" :disabled=\"loading\">\r\n          {{ loading ? \"Creating Account...\" : \"Create Account\" }}\r\n        </button>\r\n\r\n        <div class=\"error-message\" v-if=\"error\">\r\n          {{ error }}\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"login-prompt\">\r\n        <p>Already have an account?</p>\r\n        <router-link to=\"/login\" class=\"btn-secondary\"> Login </router-link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"CreateAccount\",\r\n  data() {\r\n    return {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      loading: false,\r\n      error: null,\r\n      usernameError: null,\r\n      emailError: null,\r\n      passwordError: null,\r\n      confirmPasswordError: null,\r\n    };\r\n  },\r\n  methods: {\r\n    validateForm() {\r\n      let isValid = true;\r\n\r\n      // Reset errors\r\n      this.usernameError = null;\r\n      this.emailError = null;\r\n      this.passwordError = null;\r\n      this.confirmPasswordError = null;\r\n\r\n      // Username validation\r\n      if (this.username.length < 3) {\r\n        this.usernameError = \"Username must be at least 3 characters long\";\r\n        isValid = false;\r\n      }\r\n\r\n      // Email validation\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailRegex.test(this.email)) {\r\n        this.emailError = \"Please enter a valid email address\";\r\n        isValid = false;\r\n      }\r\n\r\n      // Password validation\r\n      if (this.password.length < 8) {\r\n        this.passwordError = \"Password must be at least 8 characters long\";\r\n        isValid = false;\r\n      }\r\n\r\n      // Confirm password validation\r\n      if (this.password !== this.confirmPassword) {\r\n        this.confirmPasswordError = \"Passwords do not match\";\r\n        isValid = false;\r\n      }\r\n\r\n      return isValid;\r\n    },\r\n    async handleSubmit() {\r\n      if (this.password !== this.confirmPassword) {\r\n        this.error = \"Passwords do not match\";\r\n        return;\r\n      }\r\n\r\n      this.loading = true;\r\n      this.error = null;\r\n\r\n      try {\r\n        const response = await axios.post(\"/api/auth/register\", {\r\n          first_name: this.firstName,\r\n          last_name: this.lastName,\r\n          username: this.username,\r\n          email: this.email,\r\n          password: this.password,\r\n        });\r\n\r\n        if (response.data.message === \"User created successfully\") {\r\n          // Store the token if provided\r\n          if (response.data.token) {\r\n            localStorage.setItem(\"token\", response.data.token);\r\n          }\r\n          // Redirect to setup page\r\n          this.$router.push(\"/setup\");\r\n        }\r\n      } catch (error) {\r\n        if (error.response) {\r\n          switch (error.response.status) {\r\n            case 400:\r\n              this.error = error.response.data.detail || \"Registration failed\";\r\n              break;\r\n            case 422:\r\n              this.error = \"Please check your input and try again\";\r\n              break;\r\n            default:\r\n              this.error = \"An error occurred. Please try again.\";\r\n          }\r\n        } else {\r\n          this.error = \"Network error. Please try again.\";\r\n        }\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.create-account-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  padding: 1rem;\r\n  background-color: var(--bg-primary);\r\n  color: var(--text-primary);\r\n}\r\n\r\n.create-account-card {\r\n  background: var(--card-bg);\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px var(--shadow-color);\r\n  padding: 2rem;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  border: 1px solid var(--border-color);\r\n}\r\n\r\nh2 {\r\n  color: var(--text-primary);\r\n  margin-bottom: 0.5rem;\r\n  text-align: center;\r\n}\r\n\r\n.subtitle {\r\n  color: var(--text-secondary);\r\n  opacity: 0.8;\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.create-account-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\nlabel {\r\n  font-weight: 500;\r\n  color: var(--text-secondary);\r\n}\r\n\r\ninput {\r\n  padding: 0.75rem;\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  background-color: var(--bg-primary);\r\n  color: var(--text-primary);\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n  border-color: var(--progress-fill);\r\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\r\n}\r\n\r\n.error {\r\n  color: var(--error-text);\r\n  font-size: 0.875rem;\r\n  margin-top: 0.25rem;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: var(--progress-fill);\r\n  color: white;\r\n  padding: 0.75rem 1.5rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #43a047;\r\n}\r\n\r\n.btn-primary:disabled {\r\n  opacity: 0.7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.error-message {\r\n  color: var(--error-text);\r\n  background-color: var(--error-bg);\r\n  border: 1px solid var(--error-border);\r\n  text-align: center;\r\n  padding: 0.75rem;\r\n  border-radius: 4px;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.login-prompt {\r\n  margin-top: 2rem;\r\n  text-align: center;\r\n}\r\n\r\n.login-prompt p {\r\n  margin-bottom: 1rem;\r\n  color: var(--text-secondary);\r\n  opacity: 0.8;\r\n}\r\n\r\n.btn-secondary {\r\n  display: inline-block;\r\n  background-color: var(--bg-primary);\r\n  color: var(--progress-fill);\r\n  padding: 0.75rem 1.5rem;\r\n  border: 1px solid var(--progress-fill);\r\n  border-radius: 4px;\r\n  text-decoration: none;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-secondary:hover {\r\n  background-color: var(--progress-fill);\r\n  color: white;\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .create-account-card {\r\n    padding: 1.5rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}